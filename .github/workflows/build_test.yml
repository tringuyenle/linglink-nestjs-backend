name: Build And Test LingLink System

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  IMAGE_NAME: linglink-system

jobs:
  build_test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Use Node.js 20.11.1
      uses: actions/setup-node@v3
      with:
        node-version: 20.11.1
        cache: 'npm'

    - name: Run install
      run: npm ci

    - name: Run build
      uses: borales/actions-yarn@v4
      with:
        cmd: build # will build `yarn build` command

    - name: Test the system
      uses: borales/actions-yarn@v4
      with:
        cmd: test # will run `yarn test` command. we can use run lint instead

  push_new_image:
    needs: build_test
    runs-on: ubuntu-latest
    environment: 
      name: linglink

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Get commit ID
        id: commit_id
        run: echo "COMMIT_ID=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.COMMIT_ID }} .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.COMMIT_ID }}

      - name: Rename Docker image
        run: docker tag ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.COMMIT_ID }} ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest

      - name: Push Image latest
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest

  deploy:
    needs: push_new_image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Print results
        run: echo "Success"
